esphome:
  name: esphome-climate-badkamer
  friendly_name: ESPHome - Climate Badkamer
  comment: ESP32-S3-MINI-1-N8 - Climate Badkamer
  project:
    name: "RSVH.Presence_+_Light_Sensors"
    version: "2024.6.1"

esp32:
  board: esp32-s3-devkitc-1
  variant: ESP32S3
  framework:
    type: arduino
    version: latest

packages:
  device_base:
    url: https://github.com/Baanaaana/esphome_yaml
    ref: main
    files: [
      'packages/base_config.yaml',
      'packages/web_server.yaml',
      'packages/internal_temperature.yaml'
      ]
    refresh: 0s

wifi:
  # manual_ip:
  #   static_ip: 10.10.74.x
  #   gateway: 10.10.74.1
  #   subnet: 255.255.255.0

status_led:
  pin:
    number: GPIO2
    inverted: true

i2c:
  - id: bus_a
    sda: GPIO42
    scl: GPIO41
    scan: True
  - id: bus_b
    sda: GPIO11
    scl: GPIO12
    scan: true

sensor:
  - platform: bh1750
    i2c_id: bus_a
    name: "Illuminance"
    icon: mdi:brightness-5
    address: 0x23
    accuracy_decimals: 2
    update_interval: 1s

  - platform: scd4x
    i2c_id: bus_b 
    address: 0x62
    id: scd40
    co2:
      name: "[CO2] Carbon Dioxide"
      id: scd40_co2
      accuracy_decimals: 0
    temperature:
      name: "Temperature SCD40"
      accuracy_decimals: 2
    humidity:
      name: "Humidity SCD40"
      accuracy_decimals: 0
      filters:
        offset: -3
    update_interval: 10s
    measurement_mode: low_power_periodic
    temperature_offset: 4
  - platform: template
    name: "[CO2] Carbon Dioxide Air Percentage"
    icon: mdi:molecule-co2
    id: co2_percentage
    unit_of_measurement: "%"
    accuracy_decimals: 4
    lambda: |-
      return id(scd40_co2).state * 0.0001;
    update_interval: 10s

text_sensor:
  - platform: template
    name: "[CO2] Carbon Dioxide Classification"
    icon: "mdi:checkbox-marked-circle-outline"
    lambda: |-
      if (int(id(scd40_co2).state) == NULL) {
        return {"State Unknown"};
      }
      else if ( int(id(scd40_co2).state) <= 600) {
        return {"Perfect"};
      }
      else if (int(id(scd40_co2).state) >= 601 && int(id(scd40_co2).state) <= 1000) {
        return {"Goed"};
      }
      else if (int(id(scd40_co2).state) >= 1001 && int(id(scd40_co2).state) <= 1500) {
        return {"Ventilatie aanbevolen"};
      }
      else if (int(id(scd40_co2).state) >= 1501 && int(id(scd40_co2).state) <= 2000) {
        return {"Ventilaite noodzakelijk"};
      }
      else if (int(id(scd40_co2).state) >= 2001 && int(id(scd40_co2).state) <= 999999) {
        return {"Open onmiddelijk alle ramen"};
      }
      else {
        return {"ERROR"};
      }
    update_interval: 10s